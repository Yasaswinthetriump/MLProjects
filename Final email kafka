Great üëç here‚Äôs a polished draft that combines both the table (for clarity) and JSON (for developers) so Minerva gets the full picture. You can copy-paste this into Outlook/Teams email.


---

Subject: MDD Checker ‚Äì Finalized Kafka Message Contract (UAT & Integration)

Hi Team,

As discussed, here is the finalized message contract for the MDD Checker. This includes the full schema in tabular form for clarity and a JSON representation for developer implementation.


---

üìë Message Schema (Tabular Format)

Field	Type	Required	Description

app_id	String	Yes	Calling application identifier (e.g., Minerva).
correlation_id	UUID	Yes	End-to-end traceability across systems.
tool_id	String	Yes	Canonical identifier of the model/tool from Minerva.
tool_type	String	Yes	Classification of tool/entity (Model, EUCT, AI, etc.).
doc_id	String	Yes (ICMP pull)	Unique document identifier from ICMP (per upload).
doc_store_id	String	Yes (ICMP pull)	ICMP repository/store ID (may change if backend platform changes).
doc_type	String	Yes	Document category (MDD, MVD, supporting doc, etc.).
uploaded_by	String	Yes	User email/service ID of who uploaded.
uploaded_date	Timestamp	Yes	Upload date/time in ISO8601 format.
submitted_at	Timestamp	Not Required	Redundant; covered by uploaded_date.
report_email	String	Yes	Email address where the result/report should be sent.
schema_version	String	Recommended	Enables additive schema evolution without breaking consumers.
metadata	Object	Optional	Free-form key/value map for tags or additional info.
environment	Enum	Not Recommended	Avoid passing (DEV, SIT, UAT, PROD).
file_checksum	String	Not Recommended	Integrity check; computed internally.
document_name	String	Not Required	Evaluated at runtime.
document_size	Integer	Not Required	Evaluated at runtime.
doccheck_id	UUID	Yes (generated)	Unique submission ID generated by MDD Checker.



---

üìë JSON Schema Representation

{
  "app_id": "string ‚Äì e.g., MINERVA",
  "correlation_id": "uuid ‚Äì end-to-end traceability",
  "tool_id": "string ‚Äì model/tool identifier",
  "tool_type": "string ‚Äì MODEL | EUCT | AI",
  "doc_id": "string ‚Äì required if ICMP pull",
  "doc_store_id": "string ‚Äì required if ICMP pull",
  "doc_type": "string ‚Äì MDD | MVD | PDF, etc.",
  "uploaded_by": "string ‚Äì user/service ID",
  "uploaded_date": "ISO8601 timestamp",
  "submitted_at": "ISO8601 timestamp (optional)",
  "report_email": "string ‚Äì results destination",
  "schema_version": "string (recommended)",
  "metadata": "object (optional key/value map)",
  "environment": "enum (not recommended)",
  "file_checksum": "string (not recommended)",
  "document_name": "string (not required)",
  "document_size": "integer (not required)",
  "doccheck_id": "uuid ‚Äì generated by MDD Checker"
}


---

Example Payload

{
  "app_id": "MINERVA",
  "correlation_id": "c6a9f2b8-7b0c-4fd0-9f2b-0c7e0a9d1d21",
  "tool_id": "123",
  "tool_type": "MODEL",
  "doc_type": "MDD",
  "uploaded_by": "user@bank.com",
  "uploaded_date": "2025-09-11T19:28:00Z",
  "report_email": "results@bank.com"
}


---

Notes:

doc_id and doc_store_id will be required once ICMP integration is enabled.

doccheck_id is generated internally by MDD Checker for tracking.

Validation results will be sent via email (report_email) as agreed.

No additional Kafka result topic is introduced at this stage.


Please review and confirm if this aligns, or let me know if you‚Äôd like adjustments. Once finalized, I can also publish this in Confluence for reference.

Thanks,
Sri


---

‚úÖ This format leaves no gaps: the table is business-friendly, the JSON is developer-friendly, and the example payload helps them test quickly.

Would you like me to also add the Kafka Topic/Consumer Group details (like in your earlier draft) at the top of this email?

